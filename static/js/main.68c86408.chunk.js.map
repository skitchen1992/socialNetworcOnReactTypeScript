{"version":3,"sources":["components/common/Preloader/Preloader.module.css","api/api.ts","components/Users/Users.module.css","components/Login/Login.module.css","reportWebVitals.ts","utils/object-helpers.ts","redux/users-reducer.ts","redux/auth-reducer.ts","redux/app-reducer.ts","redux/redux-store.ts","components/Nav/Nav.tsx","components/common/Paginator/Paginator.tsx","assets/images/2.png","components/Users/User.tsx","components/Users/Users.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","hoc/WithSuspense.tsx","App.tsx","index.tsx","components/common/FormsControls/FormsControls.module.css","assets/images/Ajux_loader.gif","components/common/Preloader/Preloader.tsx","App.module.css","components/common/Paginator/Paginator.module.css","components/Users/UsersContainer.module.css","components/Header/Header.module.css","components/common/FormsControls/FormsControls.tsx","utils/validators/validators.ts","redux/profile-reducer.ts","redux/dialogs-reducer.ts"],"names":["module","exports","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getUserStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","followSuccess","type","unfollowSuccess","setCurrentPage","toggleIsFetching","isFetching","toggleIsFollowingProgress","initialState","users","totalItemsCount","followingInProgress","usersReducer","state","action","followed","count","filter","id","setUserData","isAuth","payload","getAuthUserData","dispatch","a","resultCode","authReducer","appReducer","initialized","rootReducer","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","usersPage","auth","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","Nav","to","Paginator","props","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","classes","onClick","p","e","onPageChanged","selectedPage","span","button","User","container","wrap","user","avatar","src","photos","small","userPhoto","alt","disabled","some","followUnfollowFlow","wrapper","top","name","country","footer","city","Users","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","requestUsers","this","loaderPoz","loader","Preloader","React","Component","compose","connect","isFollowed","apiMethod","bind","actionCreator","page","totalCount","Header","s","header","img","HeaderContainer","LoginReduxForm","reduxForm","onSubmit","handleSubmit","Field","input","placeholder","component","Input","validate","required","wrapCheckBox","error","message","messages","length","stopSubmit","_error","formData","WithSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","content","path","render","withRouter","promise","Promise","all","ReactDOM","document","getElementById","Textarea","meta","isError","touched","finalStyle","textareaError","textarea","value","maxLengthCreator","maxLength","addPostActionCreator","newPostText","setUserStatus","getUserProfile","profile","updateUserStatus","posts","v1","likesCount","sendMessageCreator","newMessageBody","dialogs"],"mappings":"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","file":"static/js/main.68c86408.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Preloader_loader__wv7rF\"};","import axios from \"axios\";\n\n\nconst instance = axios.create({\n    withCredentials: true,//withCredentials=> отправляет на сервер куку для авторизации\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n    headers: {\n        \"API-KEY\": \"c48f3115-8ef6-4eff-913e-2249d6f1fd23\"\n    }\n})\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance.get(\n            `users?page=${currentPage}&count=${pageSize}`)\n            .then(response => response.data)\n    },\n    follow(userId: number) {\n        return instance.post(`follow/${userId}`, {})\n    },\n    unfollow(userId: number) {\n        return instance.delete(`follow/${userId}`)\n\n    },\n    getProfile(userId: number) {\n        console.warn('Obsolete method.Please profileAPI object')\n        return profileAPI.getProfile(userId)\n\n    }\n}\nexport const profileAPI = {\n    getProfile(userId: number) {\n        return instance.get(`/profile/${userId}`)\n    },\n    getUserStatus(userId: number) {\n        return instance.get(`profile/status/${userId}`)\n    },\n    updateStatus(status: string) {\n        return instance.put(`profile/status`, {status: status})\n    }\n}\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`)\n    },\n    login(email:string, password:string, rememberMe = false) {\n        return instance.post(`auth/login`, {email, password, rememberMe})\n    },\n    logout() {\n        return instance.delete(`auth/login`)\n    },\n}\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Users_container__6F9oG\",\"wrapper\":\"Users_wrapper__3zs-t\",\"wrap\":\"Users_wrap__3rrvn\",\"top\":\"Users_top__1WywG\",\"footer\":\"Users_footer__Fs2hk\",\"name\":\"Users_name__3Kys8\",\"status\":\"Users_status__E0SMG\",\"button\":\"Users_button__1saaY\",\"city\":\"Users_city__2J85Q\",\"avatar\":\"Users_avatar__gHOlh\",\"selectedPage\":\"Users_selectedPage__J63sh\",\"currentPage\":\"Users_currentPage__3Uoko\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__1IflB\",\"input\":\"Login_input__1zhXD\",\"button\":\"Login_button__3J267\",\"wrapCheckBox\":\"Login_wrapCheckBox__2VdT9\",\"wrap\":\"Login_wrap__TMPVm\",\"error\":\"Login_error__17Wu6\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\n\n\nexport const updateObjectInArray =(items:any[],itemId:number,objPropName:string,newObjProps:{}):any=>{\n   return  items.map(u => {\n        if (u[objPropName] === itemId) {\n            return {...u, ...newObjProps}\n        }\n        return u;\n    })\n}","import {usersAPI} from \"../api/api\";\nimport {Dispatch} from \"redux\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport {updateObjectInArray} from \"../utils/object-helpers\";\n\nexport const followSuccess = (userId: number) => ({type: \"FOLLOW\", userId}) as const\nexport const unfollowSuccess = (userId: number) => ({type: \"UNFOLLOW\", userId}) as const\nexport const setUsers = (users: []) => ({type: \"SET-USERS\", users}) as const\nexport const setCurrentPage = (currentPage: number) => ({type: \"SET-CURRENT-PAGE\", currentPage}) as const\nexport const setTotalUsersCount = (totalCount: number) => ({type: \"SET-TOTAL-COUNT\", count: totalCount}) as const\nexport const toggleIsFetching = (isFetching: boolean) => ({type: \"TOGGLE-IS-FETCHING\", isFetching}) as const\nexport const toggleIsFollowingProgress = (isFetching: boolean, userId: number) => ({\n    type: \"TOGGLE-IS-FOLLOWING\",\n    isFetching,\n    userId\n}) as const\n\nexport type FollowACActionType = {\n    type: \"FOLLOW\",\n    userId: number\n}\nexport type UnFollowACActionType = {\n    type: \"UNFOLLOW\",\n    userId: number\n}\nexport type SetUsersACActionType = {\n    type: \"SET-USERS\",\n    users: []\n}\nexport type SetCurrentPageACType = {\n    type: \"SET-CURRENT-PAGE\",\n    currentPage: number\n}\nexport type SetTotalUsersCountACType = {\n    type: \"SET-TOTAL-COUNT\",\n    count: number\n}\nexport type ToggleIsFetching = {\n    type: \"TOGGLE-IS-FETCHING\",\n    isFetching: boolean,\n\n\n}\nexport type ToggleIsFollowingProgress = {\n    type: \"TOGGLE-IS-FOLLOWING\",\n    isFetching: boolean,\n    userId: number\n}\nexport type CommonUsersReducerType =\n    FollowACActionType\n    | UnFollowACActionType\n    | SetUsersACActionType\n    | SetCurrentPageACType\n    | SetTotalUsersCountACType\n    | ToggleIsFetching\n    | ToggleIsFollowingProgress\n\n\nexport type UsersType = {\n    \"name\": string,\n    \"id\": number,\n    \"uniqueUrlName\": string,\n    \"photos\": {\n        \"small\": string,\n        \"large\": string,\n    },\n    \"status\": string,\n    \"followed\": boolean\n}\nexport type FollowingInProgress = number\n\n\nexport const requestUsers = (page: number, pageSize: number) => async (dispatch: Dispatch) => {//Санка\n    dispatch(toggleIsFetching(true))\n    dispatch(setCurrentPage(page))\n    const data = await usersAPI.getUsers(page, pageSize)\n    dispatch(toggleIsFetching(false))\n    dispatch(setUsers(data.items))\n    dispatch(setTotalUsersCount(data.totalCount))\n}\n\nexport const followUnfollowFlow = (userId: number, isFollowed?: boolean) => async (dispatch: Dispatch) => {\n    dispatch(toggleIsFollowingProgress(true, userId))\n    const apiMethod = isFollowed ?  usersAPI.unfollow.bind(userId) : usersAPI.follow.bind(userId);\n    const actionCreator = isFollowed ?  unfollowSuccess : followSuccess;\n    dispatch(toggleIsFollowingProgress(true, userId))\n    const response = await apiMethod(userId)\n\n    if (response.data.resultCode === 0) {\n        dispatch(actionCreator(userId))\n    }\n    dispatch(toggleIsFollowingProgress(false, userId))\n}\n\nlet initialState = {\n    users: [] as Array<UsersType>,\n    pageSize: 3,\n    totalItemsCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: [] as Array<FollowingInProgress>\n}\nexport type InitialStateType = typeof initialState\n\nconst usersReducer = (state = initialState, action: CommonUsersReducerType): InitialStateType => {\n    switch (action.type) {\n        case \"FOLLOW\":\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId,'id',{followed: true})\n            }\n        case \"UNFOLLOW\":\n            return {\n                ...state,\n                users:updateObjectInArray(state.users, action.userId,'id',{followed: false})\n            }\n        case \"SET-USERS\":\n            return {...state, users: [...action.users]}\n        case \"SET-CURRENT-PAGE\":\n            return {...state, currentPage: action.currentPage}\n        case \"SET-TOTAL-COUNT\":\n            return {...state, totalItemsCount: action.count}\n        case \"TOGGLE-IS-FETCHING\":\n            return {...state, isFetching: action.isFetching}\n        case \"TOGGLE-IS-FOLLOWING\":\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n\n        default :\n            return state\n    }\n\n}\nexport default usersReducer","import {authAPI} from \"../api/api\";\nimport {Dispatch} from \"redux\";\nimport {ThunkDispatch} from \"redux-thunk\";\nimport {AppStateType} from \"./redux-store\";\nimport {FormAction, stopSubmit} from \"redux-form\";\n\nexport type SetUserData = ReturnType<typeof setUserData>\nexport type CommonAuthReducerType = SetUserData\nexport type InitialStateType = {\n    \"id\": null | string\n    \"login\": null | string\n    \"email\": null | string\n    \"isAuth\": boolean\n}\n\nconst initialState: InitialStateType = {\n    \"id\": null,\n    \"login\": null,\n    \"email\": null,\n    \"isAuth\": false\n}\n\n\nexport const setUserData = (id: string | null, login: string | null, email: string | null, isAuth: boolean) => ({\n    type: \"SET_USER_DATA\",\n    payload: {id, login, email, isAuth}\n}) as const\n\n\nexport const getAuthUserData = () => async (dispatch: Dispatch) => {//санка\n    const response = await authAPI.me()\n\n    if (response.data.resultCode === 0) {\n        let {id, login, email} = response.data.data\n        dispatch(setUserData(id, email, login, true))\n    }\n}\n\n\nexport const login = (email: string, password: string, rememberMe: boolean) =>\n    async (dispatch: ThunkDispatch<AppStateType, unknown, CommonAuthReducerType | FormAction>) => {//санка\n        const response = await authAPI.login(email, password, rememberMe)\n\n        if (response.data.resultCode === 0) {\n            dispatch(getAuthUserData())\n        } else {\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"\n            dispatch(stopSubmit('login', {_error: message}))\n        }\n\n\n    }\nexport const logout = () => async (dispatch: Dispatch) => {//санка\n    const response = await authAPI.logout()\n\n    if (response.data.resultCode === 0) {\n        dispatch(setUserData(null, null, null, false))\n    }\n}\n\nconst authReducer = (state = initialState, action: CommonAuthReducerType): InitialStateType => {\n    switch (action.type) {\n        case \"SET_USER_DATA\":\n            return {\n                ...state,\n                ...action.payload,\n            };\n\n        default:\n            return state\n    }\n\n}\nexport default authReducer","import {ThunkDispatch} from \"redux-thunk\";\nimport {AppStateType} from \"./redux-store\";\nimport {FormAction} from \"redux-form\";\nimport {getAuthUserData} from \"./auth-reducer\";\n\nexport type InitializedSuccess = ReturnType<typeof initializedSuccess>\nexport type AppReducerType = InitializedSuccess\nexport type InitialStateType = {\n    \"initialized\": boolean\n}\n\nconst initialState: InitialStateType = {\n    \"initialized\": false\n}\n\n\nexport const initializedSuccess = () => ({\n    type: \"INITIALIZED_SUCCESS\",\n}) as const\n\n\nexport const initializeApp = () => {//санка\n    return (dispatch: ThunkDispatch<AppStateType, unknown, AppReducerType | FormAction>) => {\n        const promise = dispatch(getAuthUserData())\n        Promise.all([promise])\n            .then(() => {\n                dispatch(initializedSuccess())\n            })\n    }\n}\n\nconst appReducer = (state = initialState, action: AppReducerType): InitialStateType => {\n    switch (action.type) {\n        case \"INITIALIZED_SUCCESS\":\n            return {\n                ...state,\n                initialized: true\n            };\n\n        default:\n            return state\n    }\n\n}\nexport default appReducer","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport profileReducer from \"./profile-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport  { reducer as formReducer } from 'redux-form'\n\n\n\nimport thunkMiddleware from \"redux-thunk\";\nimport appReducer from \"./app-reducer\";\n\nlet rootReducer = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    usersPage:usersReducer,\n    auth:authReducer,\n    form:formReducer,\n    app:appReducer\n})\n// const composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n//\n// const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)\n// ));\n\nexport type AppStateType = ReturnType<typeof rootReducer>\n\nlet store = createStore(rootReducer,applyMiddleware(thunkMiddleware ))\n\n\nexport default store","import './Nav.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nfunction Nav(){\n    return(\n            <nav>\n                <ul>\n                    <li><NavLink to=\"/profile\">Profile</NavLink></li>\n                    <li><NavLink to=\"/dialogs\">Messages</NavLink></li>\n                    <li><NavLink to=\"/users\">Users</NavLink></li>\n                    <li><NavLink to=\"/music\">Music</NavLink></li>\n                </ul>\n                <ul>\n                    <li><NavLink to=\"/settings\">Settings</NavLink></li>\n                </ul>\n            </nav>\n    )\n}\nexport default Nav;","import React, {useState} from 'react';\nimport classes from \"./Paginator.module.css\";\n\n\ntype PaginatorTypes = {\n    onPageChanged: (pageNumber: number) => void\n    totalItemsCount: number\n    pageSize: number\n    currentPage: number\n}\n\n\nconst Paginator = (props: PaginatorTypes) => {\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize)\n    let pages = []\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i)\n    }\n    const portionSize = 10\n\n    const portionCount = Math.ceil(pagesCount / portionSize)\n    const [portionNumber, setPortionNumber] = useState(1)\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\n    const rightPortionPageNumber = portionNumber * portionSize\n\n    return (\n\n        <div className={classes.currentPage}>\n            {portionNumber > 1 &&\n            <button onClick={() => setPortionNumber(portionNumber - 1)}>PREV</button>}\n\n            {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n                .map(p => props.currentPage === p ? <span onClick={(e) => {\n                        props.onPageChanged(p)\n                    }} className={classes.selectedPage}>{p}</span> :\n                    <span className={classes.span} onClick={(e) => {\n                        props.onPageChanged(p)\n                    }}>{p}</span>)}\n            {portionCount > portionNumber &&\n            <button className={classes.button} onClick={() => setPortionNumber(portionNumber + 1)}>NEXT</button>}\n        </div>\n\n    );\n};\n\nexport default Paginator;","export default __webpack_public_path__ + \"static/media/2.5d747b37.png\";","import React from 'react';\nimport userPhoto from \"../../assets/images/2.png\";\nimport classes from \"../Users/Users.module.css\";\nimport {FollowingInProgress, UsersType} from \"../../redux/users-reducer\";\nimport {NavLink} from 'react-router-dom';\n\n\n\ntype UserTypes = {\n    followUnfollowFlow: (userId: number, isFollowed?: boolean) => void\n    followingInProgress: Array<FollowingInProgress>\n    user:UsersType\n}\n\n\nconst User = (props: UserTypes) => {\n    return (\n        <>\n                <div className={classes.container}>\n                    <div className={classes.wrap}>\n                        <div>\n                            <NavLink to={`/profile/${props.user.id}`}>\n                                <img className={classes.avatar}\n                                     src={props.user.photos.small != null ? props.user.photos.small : userPhoto} alt=\"\"/>\n                            </NavLink>\n                        </div>\n                        <button className={classes.button} disabled={props.followingInProgress\n                            .some(id => id === props.user.id)} onClick={() => {\n                            props.followUnfollowFlow(props.user.id, props.user.followed)\n                        }}>\n                            {props.user.followed ? 'Unfollow' : 'Follow'}\n                        </button>\n                    </div>\n\n                    <div className={classes.wrapper}>\n                        <div className={classes.top}>\n                            <div className={classes.name}>{props.user.name}</div>\n                            <div className={classes.country}>{\"u.location.country\"}</div>\n                        </div>\n                        <div className={classes.footer}>\n                            <div className={classes.status}>{props.user.status}</div>\n                            <div className={classes.city}>{\"u.location.city\"}</div>\n                        </div>\n                    </div>\n                </div>\n        </>\n\n    );\n};\n\nexport default User;","import React from 'react';\nimport {FollowingInProgress, InitialStateType} from \"../../redux/users-reducer\";\nimport Paginator from \"../common/Paginator/Paginator\";\nimport User from \"./User\";\n\n\ntype UsersTypes = {\n    onPageChanged: (pageNumber: number) => void\n    totalItemsCount: number\n    pageSize: number\n    currentPage: number\n    users: InitialStateType\n    followUnfollowFlow: (userId: number, isFollowed?: boolean) => void\n    followingInProgress: Array<FollowingInProgress>\n}\n\n\nconst Users = (props: UsersTypes) => {\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize)\n    let pages = []\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i)\n    }\n    return (\n        <div>\n            {props.users.users.map((u) =>\n                <User followUnfollowFlow={props.followUnfollowFlow} followingInProgress={props.followingInProgress}\n                      user={u}/>)}\n\n            <Paginator onPageChanged={props.onPageChanged}\n                       totalItemsCount={props.totalItemsCount}\n                       pageSize={props.pageSize}\n                       currentPage={props.currentPage}/>\n        </div>\n\n    );\n};\n\nexport default Users;","import {AppStateType} from \"./redux-store\";\n\nexport const getUsers = (state:AppStateType) => {\n    return state.usersPage\n}\nexport  const getPageSize = (state:AppStateType) => {\n    return state.usersPage.pageSize\n}\nexport  const getTotalUsersCount = (state:AppStateType) => {\n    return state.usersPage.totalItemsCount\n}\nexport  const getCurrentPage = (state:AppStateType) => {\n    return state.usersPage.currentPage\n}\nexport  const getIsFetching = (state:AppStateType) => {\n    return state.usersPage.isFetching\n}\nexport  const getFollowingInProgress = (state:AppStateType) => {\n    return state.usersPage.followingInProgress\n}\n\n\n\n","import {connect} from \"react-redux\";\nimport {\n    followSuccess, FollowingInProgress,\n    InitialStateType,\n    setCurrentPage,\n    unfollowSuccess, requestUsers, followUnfollowFlow\n} from \"../../redux/users-reducer\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport React from \"react\";\nimport Users from \"./Users\";\nimport classes from \"../Users/UsersContainer.module.css\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage,\n    getFollowingInProgress,\n    getIsFetching,\n    getPageSize,\n    getTotalUsersCount,\n    getUsers\n} from \"../../redux/users-selectors\";\n\ntype MapStateToPropsType = {\n    users: InitialStateType,\n    pageSize: number\n    totalItemsCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: Array<FollowingInProgress>\n\n}\ntype MapDispatchToPropsType = {\n    followSuccess: (userID: number) => void\n    unfollowSuccess: (userID: number) => void\n    followUnfollowFlow: (userId: number, isFollowed?: boolean) => void\n    setCurrentPage: (users: number) => void\n    requestUsers: (page: number, pageSize: number) => void\n}\ntype UsersPropsType = MapStateToPropsType & MapDispatchToPropsType\ntype GetTasksResponseType = {\n    items: InitialStateType\n    totalCount: number\n    error: string | null\n}\n\nclass UsersContainer extends React.Component<UsersPropsType, GetTasksResponseType> {\n    componentDidMount() {\n        const {currentPage, pageSize} = this.props\n        this.props.requestUsers(currentPage, pageSize)\n    }\n\n    onPageChanged = (pageNumber: number) => {\n        const {pageSize} = this.props\n        this.props.requestUsers(pageNumber, pageSize)\n    }\n\n    render() {\n\n        return (\n            <div className={classes.loaderPoz}>\n                <div className={classes.loader}>\n                    {this.props.isFetching ? <Preloader/> : null}\n                </div>\n\n                <div className={classes.users}>\n                    <Users onPageChanged={this.onPageChanged}\n                           totalItemsCount={this.props.totalItemsCount}\n                           pageSize={this.props.pageSize}\n                           currentPage={this.props.currentPage}\n                           users={this.props.users}\n                           followUnfollowFlow={this.props.followUnfollowFlow}\n                           followingInProgress={this.props.followingInProgress}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalItemsCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, {\n        followSuccess,\n        unfollowSuccess,\n        followUnfollowFlow,\n        setCurrentPage,\n        requestUsers,\n    })\n)(UsersContainer)\n\n","import React from 'react';\nimport s from './Header.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport {UsersPropsType} from \"./HeaderContainer\";\n\n\nfunction Header(props: UsersPropsType) {\n    return (\n\n        <header className={s.header}>\n            <img className={s.img}\n                 src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/00/Vk_Logo.svg/1200px-Vk_Logo.svg.png\"></img>\n            <div className={s.login}>\n\n                {props.isAuth\n                    ? <span>{props.login} - <button onClick={props.logout}>Logout</button></span>\n                    : <NavLink to={'/login'}>Login</NavLink>\n                }\n\n            </div>\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react';\n\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../redux/auth-reducer\";\nimport {AppStateType} from \"../../redux/redux-store\";\n\n\ntype MapStateToPropsType = {\n    isAuth: boolean,\n    login: null | string\n\n}\ntype MapDispatchToPropsType = {\n    logout: () => void\n}\nexport type UsersPropsType = MapStateToPropsType & MapDispatchToPropsType\n\n\nclass HeaderContainer extends React.Component<UsersPropsType> {\n\n\n    render() {\n        return (\n            <Header {...this.props}/>\n        )\n    }\n\n}\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login,\n})\n\n\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\nimport s from \"../Login/Login.module.css\"\nimport {reduxForm, Field, InjectedFormProps} from \"redux-form\";\nimport {Input} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/auth-reducer\";\nimport {Redirect} from \"react-router\";\nimport {AppStateType} from \"../../redux/redux-store\";\n\ntype FormDataType = {\n    email: string\n    password: string\n    rememberMe: boolean\n\n}\ntype MapStateToPropsType = {\n    isAuth: boolean\n}\ntype MapDispatchToPropsType = {\n    login: (email: string, password: string, rememberMe: boolean) => void\n}\nexport type UsersPropsType = MapStateToPropsType & MapDispatchToPropsType\n\n\nconst Login = (props: UsersPropsType) => {\n    const onSubmit = (formData: FormDataType) => {\n        props.login(formData.email, formData.password, formData.rememberMe)\n    }\n    if (props.isAuth) {\n        return <Redirect to={\"/profile\"}/>\n    }\n    return (\n        <LoginReduxForm onSubmit={onSubmit}/>\n    );\n};\n\n\nexport const LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div className={s.wrapper}>\n                <div className={s.wrap}>\n                    <h3>Login</h3>\n                    <Field className={s.input} placeholder={\"Email\"} name={'email'} component={Input}\n                           validate={[required]}/>\n                    <Field className={s.input} placeholder={\"Password\"} name={'password'} type={\"password\"}\n                           component={Input} validate={[required]}/>\n                    <div className={s.wrapCheckBox}>\n                        <Field type={\"checkbox\"} name={'rememberMe'} component={'input'}/>\n                        <div>Remember me</div>\n                    </div>\n                    {props.error && <div className={s.error}>{props.error}</div>}\n                    <button className={s.button}>Login</button>\n                </div>\n            </div>\n        </form>\n    )\n}\nconst LoginReduxForm = reduxForm<FormDataType>({\n    form: 'login'\n})(LoginForm)\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\n    isAuth: state.auth.isAuth\n\n})\n\nexport default connect(mapStateToProps, {login})(Login);","import React from 'react';\nimport Preloader from \"../components/common/Preloader/Preloader\";\n\nconst WithSuspense = (Component:any) => {\n    return (props:any)=>{\n        return <React.Suspense fallback={<Preloader/>}>\n            <Component {...props}/>\n        </React.Suspense>\n    }\n};\n\nexport default WithSuspense;","import React, {Component} from 'react';\nimport './App.module.css';\nimport Nav from \"./components/Nav/Nav\";\nimport './App.module.css';\nimport {Route, withRouter} from \"react-router\";\nimport classes from \"./App.module.css\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport {AppStateType} from \"./redux/redux-store\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport WithSuspense from \"./hoc/WithSuspense\";\n\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"));\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\n\ntype MapDispatchToPropsType = {\n    initializeApp: () => void\n}\ntype MapStateToPropsType = {\n    initialized: boolean\n\n}\n\nexport type AppPropsType = MapDispatchToPropsType & MapStateToPropsType\n\nclass App extends Component<AppPropsType> {\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className={classes.wrapper}>\n                <HeaderContainer/>\n                <Nav/>\n                <div className={classes.content}>\n                    <Route path=\"/dialogs\" render= {WithSuspense(DialogsContainer)}/>\n                    <Route path=\"/profile/:userId?\" render={WithSuspense(ProfileContainer)}/>\n                    <Route path=\"/users\" render={() => <UsersContainer/>}/>\n                    <Route path=\"/login\" render={() => <LoginPage/>}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\n    initialized: state.app.initialized\n})\n\nexport default compose<React.ComponentType>(\n    withRouter,\n    connect(mapStateToProps, {initializeApp})\n)(App)\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/redux-store\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport App from \"./App\";\n\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n\nreportWebVitals();\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"FormsControls_textarea__1HM3s\",\"textareaError\":\"FormsControls_textareaError__1ZT9d\",\"error\":\"FormsControls_error__9lcue\"};","export default __webpack_public_path__ + \"static/media/Ajux_loader.6281c6f4.gif\";","import React from 'react';\n\nimport loader from \"../../../assets/images/Ajux_loader.gif\";\nimport classes from \"../Preloader/Preloader.module.css\"\n\n\n\nconst Preloader = () => {\n    return (\n        <div>\n            <img className={classes.loader} src={loader}/>\n        </div>\n    );\n};\n\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__2Rh_f\",\"content\":\"App_content__3La4L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__3SIki\",\"currentPage\":\"Paginator_currentPage__1H8mX\",\"span\":\"Paginator_span__3LfMv\",\"button\":\"Paginator_button__AsxkL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"UsersContainer_loader__VMBL8\",\"loaderPoz\":\"UsersContainer_loaderPoz__2LLA2\",\"users\":\"UsersContainer_users__1qmdJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"img\":\"Header_img__3ifQS\",\"login\":\"Header_login__3V3Qa\"};","import React from 'react';\nimport {Field, WrappedFieldProps} from \"redux-form\";\nimport s from \"./FormsControls.module.css\"\n\n\n\nexport const Textarea: React.FC<WrappedFieldProps> = ({input, meta, ...props}) => {\n    const isError = meta.touched && meta.error\n    const finalStyle = `${isError ? s.textareaError : ''} ${s.textarea}`\n    return (\n        <div>\n            <textarea className={finalStyle} {...input} {...props}/>\n            {isError && <div className={s.error}>{meta.error}</div>}\n        </div>\n    );\n};\n\nexport const Input: React.FC<WrappedFieldProps> = ({input, meta, ...props}) => {\n    const isError = meta.touched && meta.error\n    const finalStyle = `${isError ? s.textareaError : ''} ${s.textarea}`\n    return (\n        <div>\n            <input className={finalStyle} {...input} {...props}/>\n            {isError && <div className={s.error}>{meta.error}</div>}\n        </div>\n    );\n};\n\n","export const required = (value: string) => {\n    if (value) {\n        return undefined\n    }\n    return 'Field is required'\n\n}\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\n    if (value.length> maxLength) {\n        return `Max length is ${maxLength} symbols`\n    }\n    return undefined\n}\n\nexport const maxLength30 = (value: string) => {\n    if (value && value.length > 30) {\n\n    }\n    return undefined\n\n}","import {v1} from \"uuid\";\nimport {profileAPI, usersAPI} from \"../api/api\";\nimport {Dispatch} from \"redux\";\nimport {ProfileType} from \"../components/Profile/ProfileContainer\";\n\nexport const addPostActionCreator = (newPostText: string) => ({type: \"ADD-POST\", newPostText}) as const\nexport const setUserProfile = (profile: ProfileType | null) => ({type: \"SET-USER-PROFILE\", profile}) as const\nexport const setUserStatus = (status: string) => ({type: \"SET-USER-STATUS\", status}) as const\n\nexport type AddPostActionType = {\n    type: \"ADD-POST\",\n    newPostText: string\n}\n\nexport type SetUserProfile = {\n    type: \"SET-USER-PROFILE\",\n    profile: ProfileType | null\n}\nexport type SetUserStatus = {\n    type: \"SET-USER-STATUS\",\n    status: string\n}\nexport type CommonProfileReducerType = AddPostActionType | SetUserProfile | SetUserStatus\nexport type PostsType = {\n    id: string\n    message: string\n    likesCount: number\n}\n\nexport const getUserProfile = (userId: number) => async (dispatch: Dispatch) => { //санка\n    const response = await usersAPI.getProfile(userId)\n    dispatch(setUserProfile(response.data))\n}\nexport const getUserStatus = (userId: number) => async (dispatch: Dispatch) => { //санка\n    const response = await profileAPI.getUserStatus(userId)\n\n    dispatch(setUserStatus(response.data))\n}\nexport const updateUserStatus = (status: string)=> async (dispatch: Dispatch) => { //санка\n\n    const response = await profileAPI.updateStatus(status)\n                if (response.data.resultCode === 0) {\n                    dispatch(setUserStatus(status))\n                }\n}\nexport type ProfileStateType = {\n    posts: Array<PostsType>,\n    profile: null | ProfileType,\n    status: string\n}\nlet initialState: ProfileStateType = {\n    posts: [\n        {id: v1(), message: \"Hi\", likesCount: 13},\n        {id: v1(), message: \"My first post\", likesCount: 12},\n        {id: v1(), message: \"Yes\", likesCount: 14},\n    ] as Array<PostsType>,\n    profile: null,\n    status: ''\n}\n\n\nconst profileReducer = (state = initialState, action: CommonProfileReducerType): ProfileStateType => {\n    switch (action.type) {\n        case \"ADD-POST\":\n            return {\n                ...state,\n                posts: [...state.posts, {id: v1(), message: action.newPostText, likesCount: 13}]\n            };\n        case \"SET-USER-PROFILE\":\n            return {...state, profile: action.profile}\n        case \"SET-USER-STATUS\":\n            return {\n                ...state,\n                status: action.status\n            }\n        default :\n            return state\n    }\n\n}\nexport default profileReducer","import {v1} from \"uuid\";\n\nexport const sendMessageCreator = (newMessageBody:string) => ({type: \"ADD-MESSAGE\",newMessageBody}) as const\nexport type AddMessageType = ReturnType<typeof sendMessageCreator>\nexport type CommonDialogsReducerType = AddMessageType\n\ntype MessagesType = {\n    id: string\n    message: string\n}\ntype DialogsType = {\n    id: string\n    name: string\n}\n\nlet initialState = {\n    messages: [\n        {id: v1(), message: \"Hi\"},\n        {id: v1(), message: \"By\"},\n        {id: v1(), message: \"Why\"},\n        {id: v1(), message: \"Tell me\"},\n    ] as Array<MessagesType>,\n    dialogs: [\n        {id: v1(), name: \"Dim\"},\n        {id: v1(), name: \"Svetlana\"},\n        {id: v1(), name: \"Pasha\"},\n        {id: v1(), name: \"Masha\"},\n    ] as Array<DialogsType>,\n\n}\nexport type InitialStateType = typeof initialState\n\nconst dialogsReducer = (state = initialState, action: CommonDialogsReducerType): InitialStateType => {\n    switch (action.type) {\n        case \"ADD-MESSAGE\":\n            return {\n                ...state,\n                messages: [...state.messages, {id: v1(), message: action.newMessageBody}]\n            };\n        default:\n            return state\n    }\n\n}\nexport default dialogsReducer"],"sourceRoot":""}