{"version":3,"sources":["components/common/Preloader/Preloader.module.css","redux/profile-reducer.ts","redux/dialogs-reducer.ts","assets/images/2.png","api/api.ts","components/Users/Users.module.css","reportWebVitals.ts","utils/object-helpers.ts","redux/users-reducer.ts","redux/auth-reducer.ts","redux/app-reducer.ts","redux/redux-store.ts","components/Nav/Nav.tsx","components/common/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/Users.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","hoc/WithSuspense.tsx","App.tsx","index.tsx","components/Login/Login.module.css","components/Users/UsersContainer.module.css","components/common/FormsControls/FormsControls.module.css","assets/images/Ajux_loader.gif","components/common/Preloader/Preloader.tsx","components/common/FormsControls/FormsControls.tsx","components/common/Paginator/Paginator.module.css","utils/validators/validators.ts"],"names":["module","exports","addPostActionCreator","newPostText","type","setUserStatus","status","getUserProfile","userId","dispatch","a","usersAPI","getProfile","response","profile","data","getUserStatus","profileAPI","updateUserStatus","updateStatus","resultCode","savePhoto","file","photos","initialState","posts","id","v1","message","profileReducer","state","action","sendMessageCreator","newMessageBody","messages","dialogs","name","dialogsReducer","instance","axios","create","withCredentials","baseURL","headers","getUsers","currentPage","pageSize","get","then","follow","post","unfollow","delete","console","warn","put","photoFile","formData","FormData","append","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","isFetching","toggleIsFollowingProgress","users","totalItemsCount","followingInProgress","usersReducer","followed","count","filter","setUserData","isAuth","payload","getCaptchaUrlSuccess","captchaUrl","getAuthUserData","url","authReducer","appReducer","initialized","rootReducer","combineReducers","profilePage","dialogsPage","usersPage","auth","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","drawerWidth","useStyles","makeStyles","theme","createStyles","root","display","appBar","width","marginLeft","drawer","flexShrink","drawerPaper","paper","top","left","toolbar","mixins","content","flexGrow","backgroundColor","palette","background","default","padding","spacing","Nav","classes","className","CssBaseline","Drawer","variant","PaperProps","anchor","Divider","List","ListItem","button","component","Link","to","ListItemIcon","ListItemText","primary","Paginator","props","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","Button","color","size","onClick","p","e","onPageChanged","selectedPage","span","User","s","container","wrap","user","avatar","src","small","userPhoto","alt","disabled","some","followUnfollowFlow","wrapper","country","footer","city","uniqueUrlName","Users","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","requestUsers","this","loaderPoz","loader","Preloader","React","Component","compose","connect","isFollowed","apiMethod","bind","actionCreator","page","totalCount","menuButton","marginRight","title","Header","AppBar","position","Toolbar","Typography","HeaderContainer","LoginReduxForm","reduxForm","onSubmit","handleSubmit","Field","input","placeholder","Input","validate","required","wrapCheckBox","error","createField","info","length","stopSubmit","_error","log","WithSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","useDispatch","useSelector","useEffect","promise","Promise","all","Container","fixed","Grid","item","xs","Paper","elevation","sm","path","render","ReactDOM","document","getElementById","Textarea","meta","isError","touched","finalStyle","textareaError","textarea","validators","value","maxLengthCreator","maxLength"],"mappings":"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","file":"static/js/main.4cec0f13.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Preloader_loader__wv7rF\",\"loaderPoz\":\"Preloader_loaderPoz__2NZ_s\"};","import {v1} from \"uuid\";\nimport {profileAPI, usersAPI} from \"../api/api\";\nimport {Dispatch} from \"redux\";\n\nexport const addPostActionCreator = (newPostText: string) => ({type: \"ADD-POST\", newPostText}) as const\ntype PhotoType = {\n    \"small\": string | null,\n    \"large\": string | null\n}\n\nexport type Contacts =\n    \"facebook\" |\n    \"website\" |\n    \"vk\" |\n    \"twitter\" |\n    \"instagram\" |\n    \"youtube\" |\n    \"github\" |\n    \"mainLink\"\n\nexport type ProfileType = {\n    \"aboutMe\"?: string,\n    \"contacts\": {\n        [key in Contacts]: string | null\n    },\n    \"lookingForAJob\": true,\n    \"lookingForAJobDescription\": string | null,\n    \"fullName\": string | null,\n    \"userId\": number | null,\n    \"photos\": PhotoType\n}\nexport const setUserProfile = (profile: ProfileType | null) => ({type: \"SET-USER-PROFILE\", profile}) as const\nexport const setUserStatus = (status: string) => ({type: \"SET-USER-STATUS\", status}) as const\nexport const savePhotoSuccess = (photos: SavePhotoSuccess) => ({type: \"SAVE-PHOTO-SUCCESS\", photos}) as const\nexport type AddPostActionType = {\n    type: \"ADD-POST\",\n    newPostText: string\n}\n\nexport type SetUserProfile = {\n    type: \"SET-USER-PROFILE\",\n    profile: ProfileType | null\n}\nexport type SetUserStatus = {\n    type: \"SET-USER-STATUS\",\n    status: string\n}\nexport type SavePhotoSuccess = {\n    type: \"SAVE-PHOTO-SUCCESS\",\n    photos: any\n}\n\nexport type CommonProfileReducerType = AddPostActionType | SetUserProfile | SetUserStatus | SavePhotoSuccess\nexport type PostsType = {\n    id: string\n    message: string\n}\n\nexport const getUserProfile = (userId: number) => async (dispatch: Dispatch) => { //санка\n    const response = await usersAPI.getProfile(userId)\n    dispatch(setUserProfile(response.data))\n}\nexport const getUserStatus = (userId: number) => async (dispatch: Dispatch) => { //санка\n    const response = await profileAPI.getUserStatus(userId)\n\n    dispatch(setUserStatus(response.data))\n}\nexport const updateUserStatus = (status: string)=> async (dispatch: Dispatch) => { //санка\n\n    const response = await profileAPI.updateStatus(status)\n                if (response.data.resultCode === 0) {\n                    dispatch(setUserStatus(status))\n                }\n}\nexport const savePhoto = (file: File )=> async (dispatch: Dispatch) => { //санка\n    const response = await profileAPI.savePhoto(file)\n    if (response?.data.resultCode === 0) {\n        dispatch(savePhotoSuccess(response.data.data.photos))\n    }\n}\nexport type ProfileStateType = {\n    posts: Array<PostsType>,\n    profile: null | ProfileType,\n    status: string\n}\nlet initialState: ProfileStateType = {\n    posts: [\n        {id: v1(), message: \"My first post\"},\n    ] as Array<PostsType>,\n    profile: null,\n    status: ''\n}\n\n\nconst profileReducer = (state = initialState, action: CommonProfileReducerType): ProfileStateType => {\n    switch (action.type) {\n        case \"ADD-POST\":\n            return {\n                ...state,\n                posts: [{id: v1(), message: action.newPostText},...state.posts]\n            };\n        case \"SET-USER-PROFILE\":\n            return {...state, profile: action.profile}\n        case \"SET-USER-STATUS\":\n            return {\n                ...state,\n                status: action.status\n            }\n        case \"SAVE-PHOTO-SUCCESS\":\n            return {\n                ...state,\n                profile: state.profile ? {...state.profile, photos: action.photos} : state.profile\n            }\n        default :\n            return state\n    }\n}\nexport default profileReducer","import {v1} from \"uuid\";\n\nexport const sendMessageCreator = (newMessageBody:string) => ({type: \"ADD-MESSAGE\",newMessageBody}) as const\nexport type AddMessageType = ReturnType<typeof sendMessageCreator>\nexport type CommonDialogsReducerType = AddMessageType\n\ntype MessagesType = {\n    id: string\n    message: string\n}\ntype DialogsType = {\n    id: string\n    name: string\n}\n\nlet initialState = {\n    messages: [\n        {id: v1(), message: \"Hi\"},\n        {id: v1(), message: \"By\"},\n        {id: v1(), message: \"Why\"},\n        {id: v1(), message: \"Tell me\"},\n    ] as Array<MessagesType>,\n    dialogs: [\n        {id: v1(), name: \"Dim\"},\n        {id: v1(), name: \"Svetlana\"},\n        {id: v1(), name: \"Pasha\"},\n        {id: v1(), name: \"Masha\"},\n    ] as Array<DialogsType>,\n\n}\nexport type InitialStateType = typeof initialState\n\nconst dialogsReducer = (state = initialState, action: CommonDialogsReducerType): InitialStateType => {\n    switch (action.type) {\n        case \"ADD-MESSAGE\":\n            return {\n                ...state,\n                messages: [...state.messages, {id: v1(), message: action.newMessageBody}]\n            };\n        default:\n            return state\n    }\n\n}\nexport default dialogsReducer","export default __webpack_public_path__ + \"static/media/2.5d747b37.png\";","import axios from \"axios\";\n\n\nconst instance = axios.create({\n    withCredentials: true,//withCredentials=> отправляет на сервер куку для авторизации\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n    headers: {\n        \"API-KEY\": \"c48f3115-8ef6-4eff-913e-2249d6f1fd23\"\n    }\n})\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance.get(\n            `users?page=${currentPage}&count=${pageSize}`)\n            .then(response => response.data)\n    },\n    follow(userId: number) {\n        return instance.post(`follow/${userId}`, {})\n    },\n    unfollow(userId: number) {\n        return instance.delete(`follow/${userId}`)\n\n    },\n    getProfile(userId: number) {\n        console.warn('Obsolete method.Please profileAPI object')\n        return profileAPI.getProfile(userId)\n\n    }\n}\nexport const profileAPI = {\n    getProfile(userId: number) {\n        return instance.get(`/profile/${userId}`)\n    },\n    getUserStatus(userId: number) {\n        return instance.get(`profile/status/${userId}`)\n    },\n    updateStatus(status: string) {\n        return instance.put(`profile/status`, {status: status})\n    },\n    savePhoto(photoFile:any){\n        if (!photoFile) return;\n        const formData = new FormData()\n        formData.append(\"image\",photoFile)\n        return instance.put(`profile/photo`, formData,{\n            headers: {\n                'Content-Type':\"multipart/form-data\"\n            }})\n    }\n}\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`)\n    },\n    login(email:string, password:string, rememberMe = false, captcha:string|null=null) {\n        return instance.post(`auth/login`, {email, password, rememberMe,captcha})\n    },\n    logout() {\n        return instance.delete(`auth/login`)\n    },\n}\nexport const securityAPI = {\n    getCaptchaUrl() {\n        return instance.get(`security/get-captcha-url`)\n    },\n\n}\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Users_container__6F9oG\",\"wrapper\":\"Users_wrapper__3zs-t\",\"wrap\":\"Users_wrap__3rrvn\",\"top\":\"Users_top__1WywG\",\"footer\":\"Users_footer__Fs2hk\",\"name\":\"Users_name__3Kys8\",\"status\":\"Users_status__E0SMG\",\"button\":\"Users_button__1saaY\",\"city\":\"Users_city__2J85Q\",\"avatar\":\"Users_avatar__gHOlh\",\"selectedPage\":\"Users_selectedPage__J63sh\",\"currentPage\":\"Users_currentPage__3Uoko\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\n\n\nexport const updateObjectInArray =(items:any[],itemId:number,objPropName:string,newObjProps:{}):any=>{\n   return  items.map(u => {\n        if (u[objPropName] === itemId) {\n            return {...u, ...newObjProps}\n        }\n        return u;\n    })\n}","import {usersAPI} from \"../api/api\";\nimport {Dispatch} from \"redux\";\nimport {updateObjectInArray} from \"../utils/object-helpers\";\n\nexport const followSuccess = (userId: number) => ({type: \"FOLLOW\", userId}) as const\nexport const unfollowSuccess = (userId: number) => ({type: \"UNFOLLOW\", userId}) as const\nexport const setUsers = (users: []) => ({type: \"SET-USERS\", users}) as const\nexport const setCurrentPage = (currentPage: number) => ({type: \"SET-CURRENT-PAGE\", currentPage}) as const\nexport const setTotalUsersCount = (totalCount: number) => ({type: \"SET-TOTAL-COUNT\", count: totalCount}) as const\nexport const toggleIsFetching = (isFetching: boolean) => ({type: \"TOGGLE-IS-FETCHING\", isFetching}) as const\nexport const toggleIsFollowingProgress = (isFetching: boolean, userId: number) => ({\n    type: \"TOGGLE-IS-FOLLOWING\",\n    isFetching,\n    userId\n}) as const\n\nexport type FollowACActionType = {\n    type: \"FOLLOW\",\n    userId: number\n}\nexport type UnFollowACActionType = {\n    type: \"UNFOLLOW\",\n    userId: number\n}\nexport type SetUsersACActionType = {\n    type: \"SET-USERS\",\n    users: []\n}\nexport type SetCurrentPageACType = {\n    type: \"SET-CURRENT-PAGE\",\n    currentPage: number\n}\nexport type SetTotalUsersCountACType = {\n    type: \"SET-TOTAL-COUNT\",\n    count: number\n}\nexport type ToggleIsFetching = {\n    type: \"TOGGLE-IS-FETCHING\",\n    isFetching: boolean,\n\n\n}\nexport type ToggleIsFollowingProgress = {\n    type: \"TOGGLE-IS-FOLLOWING\",\n    isFetching: boolean,\n    userId: number\n}\nexport type CommonUsersReducerType =\n    FollowACActionType\n    | UnFollowACActionType\n    | SetUsersACActionType\n    | SetCurrentPageACType\n    | SetTotalUsersCountACType\n    | ToggleIsFetching\n    | ToggleIsFollowingProgress\n\n\nexport type UsersType = {\n    \"name\": string,\n    \"id\": number,\n    \"uniqueUrlName\": string,\n    \"photos\": {\n        \"small\": string,\n        \"large\": string,\n    },\n    \"status\": string,\n    \"followed\": boolean\n}\nexport type FollowingInProgress = number\n\n\nexport const requestUsers = (page: number, pageSize: number) => async (dispatch: Dispatch) => {//Санка\n    dispatch(toggleIsFetching(true))\n    dispatch(setCurrentPage(page))\n    const data = await usersAPI.getUsers(page, pageSize)\n    dispatch(toggleIsFetching(false))\n    dispatch(setUsers(data.items))\n    dispatch(setTotalUsersCount(data.totalCount))\n}\n\nexport const followUnfollowFlow = (userId: number, isFollowed?: boolean) => async (dispatch: Dispatch) => {\n    dispatch(toggleIsFollowingProgress(true, userId))\n    const apiMethod = isFollowed ?  usersAPI.unfollow.bind(userId) : usersAPI.follow.bind(userId);\n    const actionCreator = isFollowed ?  unfollowSuccess : followSuccess;\n    dispatch(toggleIsFollowingProgress(true, userId))\n    const response = await apiMethod(userId)\n\n    if (response.data.resultCode === 0) {\n        dispatch(actionCreator(userId))\n    }\n    dispatch(toggleIsFollowingProgress(false, userId))\n}\n\nlet initialState = {\n    users: [] as Array<UsersType>,\n    pageSize: 3,\n    totalItemsCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: [] as Array<FollowingInProgress>\n}\nexport type InitialStateType = typeof initialState\n\nconst usersReducer = (state = initialState, action: CommonUsersReducerType): InitialStateType => {\n    switch (action.type) {\n        case \"FOLLOW\":\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId,'id',{followed: true})\n            }\n        case \"UNFOLLOW\":\n            return {\n                ...state,\n                users:updateObjectInArray(state.users, action.userId,'id',{followed: false})\n            }\n        case \"SET-USERS\":\n            return {...state, users: [...action.users]}\n        case \"SET-CURRENT-PAGE\":\n            return {...state, currentPage: action.currentPage}\n        case \"SET-TOTAL-COUNT\":\n            return {...state, totalItemsCount: action.count}\n        case \"TOGGLE-IS-FETCHING\":\n            return {...state, isFetching: action.isFetching}\n        case \"TOGGLE-IS-FOLLOWING\":\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n\n        default :\n            return state\n    }\n\n}\nexport default usersReducer","import {authAPI, securityAPI} from \"../api/api\";\nimport {Dispatch} from \"redux\";\nimport {ThunkDispatch} from \"redux-thunk\";\nimport {AppStateType} from \"./redux-store\";\nimport {FormAction, stopSubmit} from \"redux-form\";\n\nexport type SetUserData = ReturnType<typeof setUserData>\nexport type GetCaptchaUrlSuccess = ReturnType<typeof getCaptchaUrlSuccess>\nexport type CommonAuthReducerType = SetUserData | GetCaptchaUrlSuccess\nexport type InitialStateType = {\n    \"id\": null | string\n    \"login\": null | string\n    \"email\": null | string\n    \"isAuth\": boolean\n    \"captchaUrl\": null | string\n}\n\nconst initialState: InitialStateType = {\n    \"id\": null,\n    \"login\": null,\n    \"email\": null,\n    \"isAuth\": false,\n    \"captchaUrl\": null\n}\n\n\nexport const setUserData = (id: string | null, login: string | null, email: string | null, isAuth: boolean) => ({\n    type: \"SET_USER_DATA\",\n    payload: {id, login, email, isAuth}\n}) as const\nexport const getCaptchaUrlSuccess = (captchaUrl: string) => ({\n    type: \"GET_CAPTCHA_URL_SUCCESS\",\n    payload: captchaUrl\n}) as const\n\nexport const getAuthUserData = () => async (dispatch: Dispatch) => {//санка\n    const response = await authAPI.me()\n\n    if (response.data.resultCode === 0) {\n        let {id, login, email} = response.data.data\n        dispatch(setUserData(id, email, login, true))\n    }\n}\nexport const login = (email: string, password: string, rememberMe: boolean,captcha:string) =>\n    async (dispatch: ThunkDispatch<AppStateType, unknown, CommonAuthReducerType | FormAction>) => {//санка\n        const response = await authAPI.login(email, password, rememberMe,captcha)\n\n        if (response.data.resultCode === 0) {\n            dispatch(getAuthUserData())\n        } else {\n            if (response.data.resultCode === 10) {\n                dispatch(getCaptchaUrl())\n            }\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"\n            dispatch(stopSubmit('login', {_error: message}))\n        }\n\n\n    }\nexport const logout = () => async (dispatch: Dispatch) => {//санка\n    const response = await authAPI.logout()\n\n    if (response.data.resultCode === 0) {\n        dispatch(setUserData(null, null, null, false))\n    }\n}\nexport const getCaptchaUrl = () => async (dispatch: Dispatch) => {//санка\n    const response = await securityAPI.getCaptchaUrl()\n    const captchaUrl = response.data.url\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\n}\n\nconst authReducer = (state = initialState, action: CommonAuthReducerType): InitialStateType => {\n    switch (action.type) {\n        case \"SET_USER_DATA\":\n            return {\n                ...state,\n                ...action.payload,\n            };\n        case \"GET_CAPTCHA_URL_SUCCESS\":\n            return {\n                ...state,\n                captchaUrl:action.payload\n            };\n        default:\n            return state\n    }\n\n}\nexport default authReducer","import {ThunkDispatch} from \"redux-thunk\";\nimport {AppStateType} from \"./redux-store\";\nimport {FormAction} from \"redux-form\";\nimport {getAuthUserData} from \"./auth-reducer\";\n\nexport type InitializedSuccess = ReturnType<typeof initializedSuccess>\nexport type AppReducerType = InitializedSuccess\nexport type InitialStateType = {\n    \"initialized\": boolean\n}\n\nconst initialState: InitialStateType = {\n    \"initialized\": false\n}\n\n\nexport const initializedSuccess = () => ({\n    type: \"INITIALIZED_SUCCESS\",\n}) as const\n\n\nexport const initializeApp = () => {//санка\n    return (dispatch: ThunkDispatch<AppStateType, unknown, AppReducerType | FormAction>) => {\n        const promise = dispatch(getAuthUserData())\n        Promise.all([promise])\n            .then(() => {\n                dispatch(initializedSuccess())\n            })\n    }\n}\n\nconst appReducer = (state = initialState, action: AppReducerType): InitialStateType => {\n    switch (action.type) {\n        case \"INITIALIZED_SUCCESS\":\n            return {\n                ...state,\n                initialized: true\n            };\n\n        default:\n            return state\n    }\n\n}\nexport default appReducer","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport profileReducer from \"./profile-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport  { reducer as formReducer } from 'redux-form'\n\n\n\nimport thunkMiddleware from \"redux-thunk\";\nimport appReducer from \"./app-reducer\";\n\nlet rootReducer = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    usersPage:usersReducer,\n    auth:authReducer,\n    form:formReducer,\n    app:appReducer\n})\n// const composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n//\n// const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)\n// ));\n\nexport type AppStateType = ReturnType<typeof rootReducer>\n\nlet store = createStore(rootReducer,applyMiddleware(thunkMiddleware ))\n\n\nexport default store","import React from 'react';\nimport {createStyles, Theme, makeStyles} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PeopleOutlineIcon from '@material-ui/icons/PeopleOutline';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport {Link} from \"react-router-dom\";\nconst drawerWidth = '20em';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n\n        root: {\n            display: 'flex',\n        },\n        appBar: {\n            width: `calc(100% - ${drawerWidth})`,\n            marginLeft: drawerWidth ,\n        },\n        drawer: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n        drawerPaper: {\n            width: drawerWidth,\n\n        },\n        paper: {\n            top: 'auto',\n            left: 'auto',\n        },\n        toolbar: theme.mixins.toolbar,\n        content: {\n            flexGrow: 1,\n            backgroundColor: theme.palette.background.default,\n            padding: theme.spacing(3),\n        },\n    }),\n);\n\nexport default function Nav() {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <CssBaseline/>\n            <Drawer\n                className={classes.drawer}\n                variant=\"permanent\"\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n                PaperProps={{className: classes.paper}}\n                anchor=\"left\"\n            >\n                <div className={classes.toolbar}/>\n                <Divider/>\n\n                <List>\n\n                    <ListItem button component={Link} to=\"/profile\">\n                        <ListItemIcon> <AccountCircleIcon/></ListItemIcon>\n                        <ListItemText primary={\"Profile\"}/>\n                    </ListItem>\n                    <ListItem button component={Link} to=\"/dialogs\">\n                        <ListItemIcon> <ChatBubbleOutlineIcon/></ListItemIcon>\n                        <ListItemText primary={\"Messages\"}/>\n                    </ListItem>\n                    <ListItem button component={Link} to=\"/users\">\n                        <ListItemIcon> <PeopleOutlineIcon/></ListItemIcon>\n                        <ListItemText primary={\"Users\"}/>\n                    </ListItem>\n\n                </List>\n                <Divider/>\n\n            </Drawer>\n        </div>\n    );\n}\n\n\n","import React, {useState} from 'react';\nimport classes from \"./Paginator.module.css\";\nimport {Button} from \"@material-ui/core\";\n\n\ntype PaginatorTypes = {\n    onPageChanged: (pageNumber: number) => void\n    totalItemsCount: number\n    pageSize: number\n    currentPage: number\n}\n\n\nconst Paginator = (props: PaginatorTypes) => {\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize)\n    let pages = []\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i)\n    }\n    const portionSize = 10\n\n    const portionCount = Math.ceil(pagesCount / portionSize)\n    const [portionNumber, setPortionNumber] = useState(1)\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\n    const rightPortionPageNumber = portionNumber * portionSize\n\n    return (\n\n        <div className={classes.currentPage}>\n            {portionNumber > 1 &&\n            <Button variant=\"outlined\" color=\"primary\" size={\"small\"} onClick={() => setPortionNumber(portionNumber - 1)}>PREV</Button>}\n\n            {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n                .map(p => props.currentPage === p ? <span onClick={(e) => {\n                        props.onPageChanged(p)\n                    }} className={classes.selectedPage}>{p}</span> :\n                    <span className={classes.span} onClick={(e) => {\n                        props.onPageChanged(p)\n                    }}>{p}</span>)}\n            {portionCount > portionNumber &&\n            <Button variant=\"outlined\" color=\"primary\" size={\"small\"} className={classes.button} onClick={() => setPortionNumber(portionNumber + 1)}>NEXT</Button>}\n        </div>\n\n    );\n};\n\nexport default Paginator;","import React from 'react';\nimport userPhoto from \"../../assets/images/2.png\";\nimport s from \"../Users/Users.module.css\";\nimport {FollowingInProgress, UsersType} from \"../../redux/users-reducer\";\nimport {NavLink} from 'react-router-dom';\nimport {Button} from \"@material-ui/core\";\n\n\n\ntype UserTypes = {\n    followUnfollowFlow: (userId: number, isFollowed?: boolean) => void\n    followingInProgress: Array<FollowingInProgress>\n    user:UsersType\n}\n\n\nconst User = (props: UserTypes) => {\n    return (\n        <>\n                <div className={s.container}>\n                    <div className={s.wrap}>\n                        <div>\n                            <NavLink to={`/profile/${props.user.id}`}>\n                                <img className={s.avatar}\n                                     src={props.user.photos.small != null ? props.user.photos.small : userPhoto} alt=\"\"/>\n                            </NavLink>\n                        </div>\n                        <Button size={\"small\"} variant=\"outlined\" color=\"primary\"  disabled={props.followingInProgress\n                            .some(id => id === props.user.id)} onClick={() => {\n                            props.followUnfollowFlow(props.user.id, props.user.followed)\n                        }}>\n                            {props.user.followed ? 'Unfollow' : 'Follow'}\n                        </Button>\n                    </div>\n\n                    <div className={s.wrapper}>\n                        <div className={s.top}>\n                            <div className={s.name}>{props.user.name}</div>\n                            <div className={s.country}>{props.user.id}</div>\n                        </div>\n                        <div className={s.footer}>\n                            <div className={s.status}>{props.user.status}</div>\n                            <div className={s.city}>{props.user.uniqueUrlName}</div>\n                        </div>\n                    </div>\n                </div>\n        </>\n\n    );\n};\n\nexport default User;","import React from 'react';\nimport {FollowingInProgress, InitialStateType} from \"../../redux/users-reducer\";\nimport Paginator from \"../common/Paginator/Paginator\";\nimport User from \"./User\";\n\n\ntype UsersTypes = {\n    onPageChanged: (pageNumber: number) => void\n    totalItemsCount: number\n    pageSize: number\n    currentPage: number\n    users: InitialStateType\n    followUnfollowFlow: (userId: number, isFollowed?: boolean) => void\n    followingInProgress: Array<FollowingInProgress>\n}\n\n\nconst Users = (props: UsersTypes) => {\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize)\n    let pages = []\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i)\n    }\n    return (\n        <div>\n            {props.users.users.map((u) =>\n                <User followUnfollowFlow={props.followUnfollowFlow} followingInProgress={props.followingInProgress}\n                      user={u}/>)}\n\n            <Paginator onPageChanged={props.onPageChanged}\n                       totalItemsCount={props.totalItemsCount}\n                       pageSize={props.pageSize}\n                       currentPage={props.currentPage}/>\n        </div>\n\n    );\n};\n\nexport default Users;","import {AppStateType} from \"./redux-store\";\n\nexport const getUsers = (state:AppStateType) => {\n    return state.usersPage\n}\nexport  const getPageSize = (state:AppStateType) => {\n    return state.usersPage.pageSize\n}\nexport  const getTotalUsersCount = (state:AppStateType) => {\n    return state.usersPage.totalItemsCount\n}\nexport  const getCurrentPage = (state:AppStateType) => {\n    return state.usersPage.currentPage\n}\nexport  const getIsFetching = (state:AppStateType) => {\n    return state.usersPage.isFetching\n}\nexport  const getFollowingInProgress = (state:AppStateType) => {\n    return state.usersPage.followingInProgress\n}\n\n\n\n","import {connect} from \"react-redux\";\nimport {\n    followSuccess, FollowingInProgress,\n    InitialStateType,\n    setCurrentPage,\n    unfollowSuccess, requestUsers, followUnfollowFlow\n} from \"../../redux/users-reducer\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport React from \"react\";\nimport Users from \"./Users\";\nimport classes from \"../Users/UsersContainer.module.css\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage,\n    getFollowingInProgress,\n    getIsFetching,\n    getPageSize,\n    getTotalUsersCount,\n    getUsers\n} from \"../../redux/users-selectors\";\n\ntype MapStateToPropsType = {\n    users: InitialStateType,\n    pageSize: number\n    totalItemsCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: Array<FollowingInProgress>\n\n}\ntype MapDispatchToPropsType = {\n    followSuccess: (userID: number) => void\n    unfollowSuccess: (userID: number) => void\n    followUnfollowFlow: (userId: number, isFollowed?: boolean) => void\n    setCurrentPage: (users: number) => void\n    requestUsers: (page: number, pageSize: number) => void\n}\ntype UsersPropsType = MapStateToPropsType & MapDispatchToPropsType\ntype GetTasksResponseType = {\n    items: InitialStateType\n    totalCount: number\n    error: string | null\n}\n\nclass UsersContainer extends React.Component<UsersPropsType, GetTasksResponseType> {\n    componentDidMount() {\n        const {currentPage, pageSize} = this.props\n        this.props.requestUsers(currentPage, pageSize)\n    }\n\n    onPageChanged = (pageNumber: number) => {\n        const {pageSize} = this.props\n        this.props.requestUsers(pageNumber, pageSize)\n    }\n\n    render() {\n\n        return (\n            <div className={classes.loaderPoz}>\n                <div className={classes.loader}>\n                    {this.props.isFetching ? <Preloader/> : null}\n                </div>\n\n                <div className={classes.users}>\n                    <Users onPageChanged={this.onPageChanged}\n                           totalItemsCount={this.props.totalItemsCount}\n                           pageSize={this.props.pageSize}\n                           currentPage={this.props.currentPage}\n                           users={this.props.users}\n                           followUnfollowFlow={this.props.followUnfollowFlow}\n                           followingInProgress={this.props.followingInProgress}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalItemsCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, {\n        followSuccess,\n        unfollowSuccess,\n        followUnfollowFlow,\n        setCurrentPage,\n        requestUsers,\n    })\n)(UsersContainer)\n\n","import React from 'react';\nimport {Link, NavLink} from \"react-router-dom\";\nimport {UsersPropsType} from \"./HeaderContainer\";\nimport {\n    AppBar,\n    Button,\n    createStyles,\n    makeStyles,\n    Theme,\n    Toolbar,\n    Typography\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        title: {\n            flexGrow: 1,\n        },\n    }),\n);\n\nfunction Header(props: UsersPropsType) {\n    const classes = useStyles();\n    return (\n        <header>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        SocialNetwork\n                    </Typography>\n                    {props.isAuth\n                        ? <span>{props.login} - <Button size={\"small\"} variant=\"contained\" color=\"secondary\"\n                                                        onClick={props.logout}>Logout</Button></span>\n                        : <Button color=\"secondary\" component={Link} to='/login'>Login</Button>\n                    }\n\n                </Toolbar>\n            </AppBar>\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react';\n\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../redux/auth-reducer\";\nimport {AppStateType} from \"../../redux/redux-store\";\n\n\ntype MapStateToPropsType = {\n    isAuth: boolean,\n    login: null | string\n\n}\ntype MapDispatchToPropsType = {\n    logout: () => void\n}\nexport type UsersPropsType = MapStateToPropsType & MapDispatchToPropsType\n\n\nclass HeaderContainer extends React.Component<UsersPropsType> {\n\n\n    render() {\n        return (\n            <Header {...this.props}/>\n        )\n    }\n\n}\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login,\n})\n\n\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\nimport s from \"../Login/Login.module.css\"\nimport {reduxForm, Field, InjectedFormProps} from \"redux-form\";\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/auth-reducer\";\nimport {Redirect} from \"react-router\";\nimport {AppStateType} from \"../../redux/redux-store\";\n\ntype LoginFormValuesType = {\n    email: string\n    password: string\n    rememberMe: boolean\n\n    captcha: string\n}\ntype MapStateToPropsType = {\n    isAuth: boolean,\n    captchaUrl: string | null\n\n}\ntype MapDispatchToPropsType = {\n    login: (email: string, password: string, rememberMe: boolean, captcha: string) => void\n}\nexport type UsersPropsType = MapStateToPropsType & MapDispatchToPropsType\n\n\nconst Login = (props: UsersPropsType) => {\n    const onSubmit = (formData: LoginFormValuesType) => {\n        console.log(formData.captcha)\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\n    }\n    if (props.isAuth) {\n        return <Redirect to={\"/profile\"}/>\n    }\n    return (\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\n    );\n};\n\ntype LoginFormOwnProps = {\n    captchaUrl: string | null\n}\n\nexport const LoginForm: React.FC<InjectedFormProps<LoginFormValuesType, LoginFormOwnProps> & LoginFormOwnProps> = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div className={s.wrapper}>\n                <div className={s.wrap}>\n                    <h3>Login</h3>\n                    <Field className={s.input} placeholder={\"Email\"} name={'email'} component={Input}\n                           validate={[required]}/>\n                    <Field className={s.input} placeholder={\"Password\"} name={'password'} type={\"password\"}\n                           component={Input} validate={[required]}/>\n                    <div className={s.wrapCheckBox}>\n                        <Field type={\"checkbox\"} name={'rememberMe'} component={'input'}/>\n                        <div>Remember me</div>\n                    </div>\n                    {props.error && <div className={s.error}>{props.error}</div>}\n                    <button className={s.button}>Login</button>\n                    {props.captchaUrl && <img src={props.captchaUrl}/>}\n                    {props.captchaUrl && createField(\"Symbols from image\", \"captcha\", [required], Input, {})}\n                    <div className={s.info}>Для входа воспользуйтесь тестовым аккаунтом</div>\n                    <div>Email: skitchen1992@gmail.com</div>\n                    <div>Password: 2n4i4k1i</div>\n                </div>\n            </div>\n\n        </form>\n    )\n}\nconst LoginReduxForm = reduxForm<LoginFormValuesType, LoginFormOwnProps>({form: 'login'})(LoginForm)\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\n    isAuth: state.auth.isAuth,\n    captchaUrl: state.auth.captchaUrl\n\n})\n\nexport default connect(mapStateToProps, {login})(Login);","import React from 'react';\nimport Preloader from \"../components/common/Preloader/Preloader\";\n\nconst WithSuspense = (Component:any) => {\n    return (props:any)=>{\n        return <React.Suspense fallback={<Preloader/>}>\n            <Component {...props}/>\n        </React.Suspense>\n    }\n};\n\nexport default WithSuspense;","import React, {useEffect} from 'react';\nimport './App.module.css';\nimport Nav from \"./components/Nav/Nav\";\nimport {Route} from \"react-router\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport {AppStateType} from \"./redux/redux-store\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport WithSuspense from \"./hoc/WithSuspense\";\nimport {Container, Grid, Paper,} from \"@material-ui/core\";\nimport classes from \"./components/Users/UsersContainer.module.css\";\n\n\ntype MapDispatchToPropsType = {\n    initializeApp: () => void\n}\ntype MapStateToPropsType = {\n    initialized: boolean\n\n}\nexport type AppPropsType = MapDispatchToPropsType & MapStateToPropsType\n\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"));\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\n\n\nexport const App = () => {\n\n    const dispatch = useDispatch()\n    const initialized = useSelector((state: AppStateType) => state.app.initialized)\n    useEffect(() => {\n        dispatch(initializeApp())\n    }, [])\n\n    return !initialized\n        ? <div className={classes.loaderPoz}>\n            <div className={classes.loader}>\n                <Preloader/>\n            </div>\n\n        </div>\n\n        : (\n            <Container fixed>\n                <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                        <Paper elevation={3}>\n                            <HeaderContainer/>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={2} sm={3}>\n                        <Paper elevation={3}>\n                            <Nav/>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={10} sm={9}>\n                        <Paper elevation={3}>\n                            <Route path=\"/dialogs\" render={WithSuspense(DialogsContainer)}/>\n                            <Route path=\"/profile/:userId?\" render={WithSuspense(ProfileContainer)}/>\n                            <Route path=\"/users\" render={() => <UsersContainer/>}/>\n                            <Route path=\"/login\" render={() => <LoginPage/>}/>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </Container>\n\n\n        )\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/redux-store\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport  {App} from \"./App\";\n\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n\nreportWebVitals();\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__1IflB\",\"input\":\"Login_input__1zhXD\",\"button\":\"Login_button__3J267\",\"wrapCheckBox\":\"Login_wrapCheckBox__2VdT9\",\"wrap\":\"Login_wrap__TMPVm\",\"error\":\"Login_error__17Wu6\",\"info\":\"Login_info__1zlcR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"UsersContainer_loader__VMBL8\",\"loaderPoz\":\"UsersContainer_loaderPoz__2LLA2\",\"users\":\"UsersContainer_users__1qmdJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"FormsControls_textarea__1HM3s\",\"textareaError\":\"FormsControls_textareaError__1ZT9d\",\"error\":\"FormsControls_error__9lcue\"};","export default __webpack_public_path__ + \"static/media/Ajux_loader.6281c6f4.gif\";","import React from 'react';\n\nimport loader from \"../../../assets/images/Ajux_loader.gif\";\nimport classes from \"../Preloader/Preloader.module.css\"\n\n\nconst Preloader = () => {\n    return (\n        <div className={classes.loaderPoz}>\n            <div className={classes.loader}>\n                <img className={classes.loader} src={loader}/>\n            </div>\n        </div>\n\n    );\n};\n\nexport default Preloader;\n\n","import React from 'react';\nimport {Field, WrappedFieldProps} from \"redux-form\";\nimport s from \"./FormsControls.module.css\"\n\n\nexport const Textarea: React.FC<WrappedFieldProps> = ({input, meta, ...props}) => {\n    const isError = meta.touched && meta.error\n    const finalStyle = `${isError ? s.textareaError : ''} ${s.textarea}`\n    return (\n        <div>\n            <textarea className={finalStyle} {...input} {...props}/>\n            {isError && <div className={s.error}>{meta.error}</div>}\n        </div>\n    );\n};\n\nexport const Input: React.FC<WrappedFieldProps> = ({input, meta, ...props}) => {\n    const isError = meta.touched && meta.error\n    const finalStyle = `${isError ? s.textareaError : ''} ${s.textarea}`\n    return (\n        <div>\n            <input className={finalStyle} {...input} {...props}/>\n            {isError && <div className={s.error}>{meta.error}</div>}\n        </div>\n    );\n};\n\nexport const createField = (placeholder:string, name:string, validators:any, component:any, props = {}) => {\n    return (\n        <>\n            <Field placeholder={placeholder}\n                   name={name}\n                   validate={validators}\n                   component={component}\n                   {...props}\n            />\n        </>\n    );\n};\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__3SIki\",\"currentPage\":\"Paginator_currentPage__1H8mX\",\"span\":\"Paginator_span__3LfMv\",\"button\":\"Paginator_button__AsxkL\"};","export const required = (value: string) => {\n    if (value) {\n        return undefined\n    }\n    return 'Field is required'\n\n}\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\n    if (value.length> maxLength) {\n        return `Max length is ${maxLength} symbols`\n    }\n    return undefined\n}\n\nexport const maxLength30 = (value: string) => {\n    if (value && value.length > 30) {\n\n    }\n    return undefined\n\n}"],"sourceRoot":""}